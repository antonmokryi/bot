// Звісно, розглянемо інший варіант завдання з приблизно такою ж складністю:

// Завдання: Клас Student

// Створіть клас Student, який має:

// Приватні властивості:

// #name (ім'я студента)
// #studentID (номер студентського квитка, наприклад, "S123456")
// #grades (масив оцінок студента)
// Конструктор, який приймає два параметри: name та studentID.

// Гетери для отримання значень name, studentID та grades.

// Сетер для додавання нової оцінки в масив grades. Переконайтеся, що оцінка є числом від 1 до 5. Якщо оцінка не відповідає цим критеріям, виведіть повідомлення про помилку.

// Метод getAverageGrade(), який повертає середню оцінку студента.

// Приклад використання:

// javascript
// Copy code
// const student1 = new Student('Anna Smith', 'S123456');

// // Використання гетерів
// console.log(student1.name); // "Anna Smith"
// console.log(student1.studentID); // "S123456"
// console.log(student1.grades); // []

// // Використання сетера для додавання оцінок
// student1.grades = 5;
// student1.grades = 4;
// student1.grades = 3;
// console.log(student1.grades); // [5, 4, 3]

// // Спроба додати недійсну оцінку
// student1.grades = 6; // Повинно вивести повідомлення про помилку, наприклад: "Invalid grade"

// // Використання методу getAverageGrade
// console.log(student1.getAverageGrade()); // 4 (так як (5+4+3)/3 = 4)
// Керівництво по виконанню завдання:

// Почніть зі створення класу Student з вказаними приватними властивостями та конструктором.
// Додайте гетери для вказаних властивостей.
// Реалізуйте сетер для grades, додайте перевірку на коректність оцінки перед її додаванням до масиву.
// Реалізуйте метод getAverageGrade(), який розраховує середнє арифметичне масиву оцінок.
// Таким чином, це завдання надає можливість поглибити розуміння праці з масивами та роботи з гетерами та сетерами у JavaScript.
